{
  "translation": {
    "header": "Pedro Pizzi",
    "select_language": "Selecione o idioma:",
    "projects_title": "Meus Projetos",
    "projects_desc": "Aqui você encontrará meus projetos acadêmicos, profissionais e pessoais.",
    "about_title": "Sobre Mim",
    "about_desc": "Perfil: Engenheiro de computação",
    "about_desc2": "Sou um desenvolvedor que busca sempre pelas soluções efetivas, invadoras e criativas.",
    "about_desc3": "Estou no décimo período da minha faculdade de engenharia de computação.",
    "about_desc4": "Falo quatro diferentes idiomas e sempre gosto de aprender coisas novas",
    "contact_title": "Contato",
    "contact_desc": "Você pode me encontrar no GitHub, LinkedIn ou me enviar um e-mail para colaborações ou dúvidas.",
    "footer_text": "Feito com magia e café ☕",
    "resume_title": "Currículo",
    "resume_desc": "Aqui você pode visualizar ou baixar meu currículo completo em PDF.",
    "resume_button": "Ver Currículo",
    "projects": [
      {
        "title": "Detecção de ataques DoS usando IA generativa",
        "description": "Detecção de ataques DoS usando IA generativa, projeto do meu TCC no Cefet/Rj"
      },
      {
        "title": "Back-end usando NestJS",
        "description": "Projeto base de back-end utilizando NestJS, TypeORM e PostegreSQL. Autenticação JWT, Envio de email e operações com entidades."
      },
      {
      "title": "Pacman em Assembly P3",
      "description": "Pacman desenvolvido por mim, em Assembly P3, na disciplina de Arquitetura de Computadores no CEFET/RJ, curso de Engenharia de Computação."
      },
      {
        "title": "Sistema de Biblioteca com Listas Encadeadas",
        "description": "Sistema para Linux desenvolvido em C utilizando listas encadeadas para gestão eficiente de memória. Controla alunos/livros/infraestrutura com operações de complexidade O(n)."
      },
      {
      "title": "Produtor-Consumidor Paralelo com fork()",
        "description": "Implementação em C exclusiva para Linux demonstrando paralelismo em nível de processos usando fork(). Inclui um produtor gerando dados e um consumidor processando-os via memória compartilhada, desenvolvido para exploração acadêmica de conceitos básicos de paralelização."
      }
    ],
    "blog_title": "Youtube Channel",
    "blog_desc": "Confira meus posts comentando vídeos tutoriais que publico no YouTube.",
    "blog_post_1_title": "Introdução ao Nest.js",
    "blog_post_1_desc": "Veja como configurar do zero um projeto Nest.js com boas práticas.",
    "blog_post_2_title": "Iniciando Nosso Projeto com NestJS | Modelando Entidades e Explicando Conceitos Básicos",
    "blog_post_2_desc": "Primeiros passos com NestJS: criação do projeto, modelagem das entidades iniciais e explicação dos fundamentos do framework.",
    "watch_video": "Assistir vídeo"
  }
}